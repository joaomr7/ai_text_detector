import os

from src.exception import CustomException
from src.paths import ARTIFACTS_PATH
from src.utils import load_object

from src.components.data_transformation import DataTransformationConfig
from src.components.model_trainer import ModelTrainerConfig

class PredictPipeline():
    '''
    Pipeline to evaluate if a text was generated by an human or AI.
    '''

    def __init__(self):
        self.__load_objects()

    def __load_objects(self):
        '''
        Helper function to load model and preprocessor.
        '''

        model_path = ModelTrainerConfig().trained_model_file_path
        preprocessor_path = DataTransformationConfig().preprocessor_obj_file_path

        self.model = load_object(file_path=model_path)
        self.preprocessor = load_object(file_path=preprocessor_path)

    def predict_proba(self, documents):
        '''
        Function to predict the probability of the given documents were generated by an AI.

        Parameters
        ---
        * documents: list of documents (texts) to predict the probability.
        
        Returns
        ---
        * list of probabilities.
        '''

        try:
            # preprocess texts
            prepeocessed_data = self.preprocessor.transform(documents)

            # predict probas
            probas = self.model.predict_proba(prepeocessed_data)[:, 1]

            return probas
        
        except Exception as e:
            raise CustomException(e)
        
    def predict_single_document(self, document):
        '''
        Function to predict the probability of the given document was generated by an AI.

        Parameters
        ---
        * document: document (text) to predict the probability.
        
        Returns
        ---
        * single probability.
        '''

        try:
            proba = self.predict_proba([document])[0]
            return proba

        except Exception as e:
            raise CustomException(e)